<%- include('../layouts/user_layouts/userHeader.ejs') %>
<div class="container" style="margin-top: 150px;">
    <% if (typeof message !== 'undefined' && message) { %>
        <p class="error" style="font-size: large;"><%= message %></p>
    <% } %>

    <form id="forgotPasswordForm" class="row contact_form" onsubmit="return sendOtpRequest(event)" method="post">
        <div class="col-md-12 form-group p_star">
            <input type="email" class="form-control" id="forgotemail" name="email" placeholder="email" required>
            <span class="error" id="forgotemailError"></span>
        </div>
        <button type="submit" value="submit" class="btn_3">GET OTP</button>
    </form>
  
    <form id="otpForm" class="row contact_form" style="display: none;" onsubmit="return verifyOtpRequest(event)" method="post">
        <div class="col-md-12 form-group p_star">
            <input type="text" class="form-control" id="otpInput" name="otp" placeholder="Enter OTP" required>
            <span class="error" id="otpError"></span>
        </div>
        <button type="submit" value="submit" class="btn_3">Verify OTP</button>
    
        <div class="col-md-12 form-group">
            <p id="timer"></p>
            <button id="resendBtn" class="btn_3" disabled>Resend OTP</button>
        </div>
    </form>
  
    <form id="passwordChangeForm" class="row contact_form" style="display: none;" onsubmit="return changePasswordRequest(event)">
        <div class="col-md-12 form-group p_star">
            <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" required>
        </div>
        <div class="col-md-12 form-group p_star">
            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password" required>
        </div>
        <span class="error" id="passwordError"></span>
        <button type="submit" value="submit" class="btn_3">Change Password</button>
    </form>
  
    <div id="responseMessage"></div>
</div>
<%- include('../layouts/user_layouts/userFooter.ejs') %>



<!-- <script>
    document.addEventListener('DOMContentLoaded', function () {
    const forgotPasswordForm = document.getElementById('forgotPasswordForm');
    const otpForm = document.getElementById('otpForm');
    const passwordChangeForm = document.getElementById('passwordChangeForm');



    
    // Email validation function
    function validateEmail() {
        var email = document.getElementById("forgotemail").value;
        var emailError = document.getElementById("forgotemailError");
        var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;

        if (!emailPattern.test(email)) {
            emailError.textContent = "Please enter a valid email address.";
            return false;
        } else {
            emailError.textContent = "";
            return true;
        }
    }

    // Send OTP request
    function sendOtpRequest(event) {
        event.preventDefault();
        if (!validateEmail()) return;

        const email = document.getElementById("forgotemail").value;

        fetch('/forgotpassword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email: email })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                localStorage.setItem('Email', email);
                forgotPasswordForm.style.display = 'none'; // Hide email form
                otpForm.style.display = 'block'; // Show OTP form
                document.getElementById("responseMessage").textContent = data.message;
            } else {
                document.getElementById("forgotemailError").textContent = data.message || "Failed to send OTP.";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
    let interval;
    let timerElement = document.getElementById("timer");
    let resendButton = document.getElementById("resendBtn");
    let countdown = 10; // 30 seconds countdown

    function startTimer() {
        let interval = setInterval(() => {
            if (countdown > 0) {
                countdown--;
                timerElement.textContent = `You can resend OTP in ${countdown} seconds.`;
            } else {
                clearInterval(interval);
                timerElement.textContent = "";
                resendButton.disabled = false;
            }
        }, 1000);
    }

    function resendOTP() {
        
        clearInterval(interval)
        
        countdown = 10;
        resendButton.disabled = true;
        startTimer();
        $.ajax({
            type:"post",
            url:"resendotp",
            success: function (response) {
                if(response.success){
                    Swal.fire({
                        icon:"success",
                        title:"OTP resend successfully",
                        
                    })
                }else{
                    Swal.fire({
                        icon:"error",
                        title:"error",
                        text:"OTP resend failed",
                        
                    })
                }
            }
        })
        return false;
    }

    // Verify OTP
    function verifyOtpRequest(event) {
        event.preventDefault();
        const otp = document.getElementById("otpInput").value;
        const otpError = document.getElementById("otpError");
        const responseMessage = document.getElementById("responseMessage");

        fetch('/verifyforgototp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ otp: otp })
        })
        .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
        })        
        .then(data => {
            if (data.success) {
                otpForm.style.display = 'none'; // Hide OTP form
                passwordChangeForm.style.display = 'block'; // Show password change form
                document.getElementById("responseMessage").textContent = "OTP verified, please change your password.";
            } else {
                document.getElementById("otpError").textContent = data.message || "Invalid OTP.";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Change password after OTP validation
    function changePasswordRequest(event) {
        event.preventDefault();
        const newPassword = document.getElementById("newPassword").value;
        const confirmPassword = document.getElementById("confirmPassword").value;
        const passwordError = document.getElementById("passwordError");


        // const email = req.session.forgotpasswordemail

        // if (!email) {
        //     passwordError.textContent = "Email not found. Please try again.";
        //     return;
        // }


        if (newPassword !== confirmPassword) {
            document.getElementById("passwordError").textContent = "Passwords do not match.";
            return;
        }

        fetch('/forgotpasswordchange ', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ newPassword: newPassword })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById("responseMessage").textContent = "Password changed successfully.";
                passwordChangeForm.style.display = 'none'; // Hide password form
            } else {
                document.getElementById("passwordError").textContent = data.message || "Failed to change password.";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Add event listeners
    forgotPasswordForm.addEventListener('submit', sendOtpRequest);
    otpForm.addEventListener('submit', verifyOtpRequest);
    passwordChangeForm.addEventListener('submit', changePasswordRequest);

    window.onload = startTimer;

});
</script> -->



<script>
document.addEventListener('DOMContentLoaded', function () {
    const forgotPasswordForm = document.getElementById('forgotPasswordForm');
    const otpForm = document.getElementById('otpForm');
    const passwordChangeForm = document.getElementById('passwordChangeForm');
    let interval;
    let timerElement = document.getElementById("timer");
    let resendButton = document.getElementById("resendBtn");
    let countdown = 10; // 30 seconds countdown

    // Email validation function
    function validateEmail() {
        var email = document.getElementById("forgotemail").value;
        var emailError = document.getElementById("forgotemailError");
        var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;

        if (!emailPattern.test(email)) {
            emailError.textContent = "Please enter a valid email address.";
            return false;
        } else {
            emailError.textContent = "";
            return true;
        }
    }

    // Send OTP request
    function sendOtpRequest(event) {
        event.preventDefault();
        if (!validateEmail()) return;

        const email = document.getElementById("forgotemail").value;

        fetch('/forgotpassword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email: email })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                localStorage.setItem('Email', email);
                forgotPasswordForm.style.display = 'none'; // Hide email form
                otpForm.style.display = 'block'; // Show OTP form
                document.getElementById("responseMessage").textContent = data.message;
                resendButton.disabled = true;
                startTimer();
            } else {
                document.getElementById("forgotemailError").textContent = data.message || "Failed to send OTP.";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Start timer for resend OTP
    function startTimer() {
        countdown = 10; // Reset the countdown
        interval = setInterval(() => {
            if (countdown > 0) {
                countdown--;
                timerElement.textContent = `You can resend OTP in ${countdown} seconds.`;
            } else {
                clearInterval(interval);
                timerElement.textContent = "";
                resendButton.disabled = false;
            }
        }, 1000);
    }

    // Resend OTP request
    function resendOTP() {
        clearInterval(interval);
        resendButton.disabled = true;
        startTimer();

        fetch('/forgotpasswordresendotp', {
            method: 'POST'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: "success",
                    title: "OTP resent successfully",
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "OTP resend failed",
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Verify OTP
    function verifyOtpRequest(event) {
        event.preventDefault();
        const otp = document.getElementById("otpInput").value;

        fetch('/verifyforgototp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ otp: otp })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                otpForm.style.display = 'none'; // Hide OTP form
                passwordChangeForm.style.display = 'block'; // Show password change form
                document.getElementById("responseMessage").textContent = "OTP verified, please change your password.";
            } else {
                document.getElementById("otpError").textContent = data.message || "Invalid OTP.";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Change password after OTP validation
    function changePasswordRequest(event) {
        event.preventDefault();
        const newPassword = document.getElementById("newPassword").value;
        const confirmPassword = document.getElementById("confirmPassword").value;
        const passwordError = document.getElementById("passwordError");

        if (newPassword !== confirmPassword) {
            passwordError.textContent = "Passwords do not match.";
            return;
        }

        fetch('/forgotpasswordchange', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ newPassword: newPassword })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById("responseMessage").textContent = "Password changed successfully.";
                passwordChangeForm.style.display = 'none'; // Hide password form
            } else {
                passwordError.textContent = data.message || "Failed to change password.";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    // Add event listeners
    forgotPasswordForm.addEventListener('submit', sendOtpRequest);
    otpForm.addEventListener('submit', verifyOtpRequest);
    passwordChangeForm.addEventListener('submit', changePasswordRequest);
    resendButton.addEventListener('click', resendOTP); // Attach event listener
});
</script>