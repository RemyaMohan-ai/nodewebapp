<%- include('../layouts/user_layouts/userHeader.ejs') %>

<div class="container">
    
  
        
   <section style="margin-top: 90px;">




    <div class="row">
        <% if (addresses && addresses.length > 0) { %>
            <form id="selectAddressForm" method="POST" action="/cart/checkout">
                <% addresses.forEach(function(addr) { %>
                    <div class="col-md-6 col-sm-12 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <input 
                                    type="radio" 
                                    name="selectedAddress" 
                                    value="<%= addr._id %>" 
                                    onchange="document.getElementById('selectAddressForm').submit();" 
                                    <%= addr._id.toString() === (address ? address._id.toString() : '') ? 'checked' : '' %>
                                >
                                Select this address
                                <p><strong><%= addr.name %></strong></p>
                                <p><%= addr.building %>, <%= addr.addresslane %>, <%= addr.city %>, <%= addr.state %>, <%= addr.pincode %></p>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </form>
        <% } else { %>
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <p>Please add an address</p>
                    </div>
                </div>
            </div>
        <% } %>
    </div>
    

</section>
    
    <a href="/cart/addaddress" class="add-address-button">+ Add New Address</a>
    <a href="/cart/payment" class="add-address-button">Payment</a>
    

      <div class="amount-payable">
        <p>Amount Payable</p>
        <p><%= finalPrice %></p>
    </div>
    
    <section class="details">
        <div class="payment-methods">
            <h2>Payment</h2>
            
           
            <div class="payment-option">
                <label>
                    <input type="radio" name="payment" value="online-payment" onclick="selectPaymentMethod('online-payment')">
                    online-payment
                </label>
                <div class="panel">
                    <p>Add net banking details here...</p>
                </div>
            </div>
    
            <!-- Wallet -->
            <div class="payment-option">
                <label>
                    <input type="radio" name="payment" value="Wallet" onclick="selectPaymentMethod('Wallet')">
                    Wallet
                </label>
                <div class="panel">
                    <p>Add wallet details here...</p>
                </div>
            </div>
    
            <!-- Cash on Delivery -->
            <div class="payment-option">
                <label>
                    <input type="radio" name="payment" value="Cash on Delivery" onclick="selectPaymentMethod('Cash on Delivery')">
                    Cash on Delivery
                </label>
                <div class="panel">
                    <p>For safe, contactless and hassle-free delivery, pay using card/wallet/netbanking</p>
                </div>
            </div>
        </div>
        
    </section>
    
   
    

</div>
<div>
    <button id="placeOrderButton" onclick="placeOrder()" class="full-width-button" disabled>Place Order</button>
</div>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
 function selectPaymentMethod(method) {
    fetch('/cart/selectPaymentMethod', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ paymentMethod: method })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log("Payment method selected:", data);
            document.getElementById('placeOrderButton').disabled = false;
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to select payment method.'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred.',
            confirmButtonText: 'OK'
        });
    });
}

function placeOrder() {
    fetch('/cart/confirmOrder', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success && data.razorpayOrderId) {
            startRazorpayPayment(data.razorpayOrderId, data.amount, data.currency, data.user, data.razorpayKey);
        } else if (data.success) {
            window.location.href = '/cart/orderconfirmation';
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Order Error',
                text: 'Unable to place the order.'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Order Error',
            text: 'An unexpected error occurred.'
        });
    });
}


function startRazorpayPayment(razorpayOrderId, amount, currency, user, razorpayKey) {
    const options = {
        key: razorpayKey,
        amount: amount,
        currency: currency,
        name: "LOUNGE LUX",
        description: "E-commerce Transaction",
        order_id: razorpayOrderId,
        handler: function (response) {
            fetch('/cart/verifyPayment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    razorpayOrderId: razorpayOrderId,
                    razorpayPaymentId: response.razorpay_payment_id,
                    razorpaySignature: response.razorpay_signature
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                icon: 'success',
                title: 'Payment Successful',
                text: data.message
                }).then(() => {
                    window.location.href = '/cart/orderconfirmation';
                });
                } else {
                    if (data.redirect) {
            
                    Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: data.message
                    }).then(() => {
                        window.location.href = '/cart/orderconfirmation';
                    });
                    }else {
                    Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: 'Your payment failed. Please try again from the My Orders page.'
                });
                }
                }
            });
        },
        
       
        prefill: {
            name: user.name,
            email: user.email
        },
        theme: {
            color: "#F37254"
        }
    };
    const rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', function (response) {
        // Log or display the error information
        console.error("Payment failed:", response.error);
        
        Swal.fire({
            icon: 'warning',
            title: 'Payment Failed',
            text: 'Your payment was unsuccessful. Order Placed and You can retry payment from OrderPage.',
        }).then(() => {
            window.location.href = '/cart/orderconfirmation';
        });
    });




    rzp1.open();
}


// function retryPayment() {
//     fetch('/cart/retryPayment', { method: 'POST' })
//         .then(response => response.json())
//         .then(data => {
//             if (data.success && data.razorpayOrderId) {
//                 startRazorpayPayment(data.razorpayOrderId, data.amount, data.currency, data.user, data.razorpayKey);
//             } else {
//                 Swal.fire({
//                     icon: 'error',
//                     title: 'Payment Retry Failed',
//                     text: data.message || 'Unable to retry payment.'
//                 });
//             }
//         })
//         .catch(error => {
//             console.error('Retry Payment Error:', error);
//             Swal.fire({
//                 icon: 'error',
//                 title: 'Payment Retry Error',
//                 text: 'An unexpected error occurred while retrying payment.'
//             });
//         });
// }


</script>






<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<style>

.payment-option {
    margin: 10px 0;
}

.payment-option label {
    display: flex;
    align-items: center;
    font-weight: bold;
    cursor: pointer;
}

.payment-option input[type="radio"] {
    margin-right: 10px;
    cursor: pointer;
}

.full-width-button {
    width: 100%;
    background-color: black;
    color: white;
    padding: 10px;
    font-size: 16px;
    cursor: pointer;
    border: none;
    opacity: 0.7;
    transition: opacity 0.3s;
}

.full-width-button:enabled {
    opacity: 1;
}

.full-width-button:disabled {
    cursor: not-allowed;
    background-color: #ccc;
}


</style>

<%- include('../layouts/user_layouts/userFooter.ejs') %>
